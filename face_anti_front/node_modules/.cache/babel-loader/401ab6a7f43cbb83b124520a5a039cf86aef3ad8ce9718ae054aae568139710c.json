{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4f455327\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\"\n  }\n};\nconst _hoisted_3 = {\n  src: \"\",\n  ref: \"video\",\n  id: \"video\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"camera\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  src: \"\",\n  ref: \"video_result\",\n  id: \"video_result\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"camera_result\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"botton_box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_createElementVNode(\"video\", _hoisted_3, null, 512 /* NEED_PATCH */), _hoisted_4]), _createElementVNode(\"div\", null, [_createElementVNode(\"video\", _hoisted_5, null, 512 /* NEED_PATCH */), _hoisted_6])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.getCamera())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"打开摄像头\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"danger\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.closeCamera())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"关闭摄像头\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[2] || (_cache[2] = $event => $setup.getDetection())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"开始检测\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"danger\",\n    onClick: _cache[3] || (_cache[3] = $event => $setup.closeDetection())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"关闭检测\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[4] || (_cache[4] = function () {})\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"保存截图\")]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","style","src","ref","id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createVNode","_component_el_button","type","onClick","_cache","$event","$setup","getCamera","default","_withCtx","_createTextVNode","_","closeCamera","getDetection","closeDetection"],"sources":["C:\\Users\\31136\\Desktop\\face_anti_front\\src\\components\\onlineAlaysis.vue"],"sourcesContent":["<template>\r\n <div class=\"container\">\r\n    \r\n    <div style=\"display: flex;flex-direction: row;\">\r\n        <div>\r\n            <video  src=\"\" ref=\"video\" id=\"video\"></video>\r\n            <canvas id=\"camera\"></canvas>\r\n        </div>\r\n        <div>\r\n            <video src=\"\" ref=\"video_result\" id=\"video_result\"></video>\r\n            <canvas id=\"camera_result\"></canvas>\r\n        </div>\r\n        \r\n    </div>\r\n    <div class=\"botton_box\">\r\n        <el-button type=\"primary\" @click=\"getCamera()\">打开摄像头</el-button>\r\n        <el-button type=\"danger\" @click=\"closeCamera()\">关闭摄像头</el-button>\r\n        <el-button type=\"primary\" @click=\"getDetection()\">开始检测</el-button>\r\n        <el-button type=\"danger\" @click=\"closeDetection()\">关闭检测</el-button>\r\n        <el-button type=\"primary\" @click=\"function(){}\">保存截图</el-button>\r\n        \r\n    </div>\r\n    \r\n </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref,onMounted,onBeforeUnmount,} from 'vue';\r\nconst video = ref()\r\nconst video_result = ref()\r\nlet flag = 0\r\nconst canvas = ref()\r\nconst canvas_result = ref()\r\nconst ctx = ref()\r\nconst socket = new WebSocket('ws://localhost:8888');\r\nonMounted(()=>{\r\n    console.log('正在打开摄像头。。。')\r\n    getCamera();\r\n    //连接后端socket\r\n    connection()\r\n    reconnection()\r\n})\r\nfunction connection(){\r\n    socket.onopen = ()=>{\r\n        console.log('socket 已打开...')\r\n    }\r\n}\r\nasync function reconnection(){\r\n    console.log('Attempting to reconnect...');\r\n    setTimeout(connection(), 3000); // 3秒后尝试重新连接\r\n}\r\nfunction getCamera(){\r\n    canvas.value = document.getElementById('camera');\r\n    ctx.value = canvas.value.getContext('2d');\r\n    if(navigator.mediaDevices){\r\n        navigator.mediaDevices.getUserMedia({video:true,audio:false}).then((stream)=>{\r\n            video.value.srcObject = stream;\r\n            video.value.play();\r\n            video_result.value.srcObject = stream\r\n            video_result.value.play();\r\n            let  mediaRecorder = new MediaRecorder(stream);\r\n            mediaRecorder.ondataavailable = (event) => {\r\n            if (event.data && event.data.size > 0 && flag === 1) {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.value.videoWidth;\r\n                canvas.height = video.value.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video.value, 0, 0, canvas.width, canvas.height);\r\n                // 将图像数据编码为 base64 字符串\r\n                const base64ImageData = canvas.toDataURL('image/jpeg');\r\n                // 发送 base64 编码后的图像数据给后端处理\r\n                socket.send(base64ImageData);  \r\n            }\r\n    };\r\n            mediaRecorder.start(1000);\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }else{\r\n        //防止浏览器版本旧不支持mediaDevices\r\n        navigator.mediaDevices={}\r\n    }\r\n}\r\nonBeforeUnmount(()=>{\r\n    //closeCamera();\r\n})\r\nfunction closeCamera(){\r\n    let stream = video.value.srcObject;\r\n    if (!stream) return;\r\n    let tracks = stream.getTracks();\r\n    tracks.forEach((x) => {\r\n    x.stop();\r\n    });\r\n}\r\nfunction getDetection(){\r\n    flag = 1;\r\n    console.log(\"开始检测\")\r\n    socket.onmessage = (event) => {\r\n        console.log(event.data);\r\n        let imageData = event.data;\r\n         // 解码并显示图片\r\n        const blob = new Blob([imageData], { type: 'image/jpeg' }); // 假设接收的是 JPEG 格式的图片\r\n        const img = new Image();\r\n        img.onload = ()=>{\r\n            canvas.value.width = img.width;\r\n            canvas.value.height = img.height;\r\n            ctx.value.drawImage(img, 0, 0);\r\n        };\r\n    };\r\n}\r\n\r\nfunction closeDetection(){\r\n    flag = 0;\r\n    console.log(\"关闭检测\")\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.container{\r\n    display: flex;\r\n    width: 84vw;\r\n    max-height: 90vh;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #f0f0f0;\r\n    padding-top: 1%;\r\n    padding-bottom: 3%;\r\n}\r\n#camera{\r\n    width:0;\r\n    height:0;\r\n    display: none;\r\n}\r\n#video{\r\n    width:35vw;\r\n}\r\n.botton_box{\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n</style>"],"mappings":";;;EACMA,KAAK,EAAC;AAAW;;EAEdC,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;;EAE/BC,GAAG,EAAC,EAAE;EAACC,GAAG,EAAC,OAAO;EAACC,EAAE,EAAC;;gEAC9BC,mBAAA,CAA6B;EAArBD,EAAE,EAAC;AAAQ;;EAGZF,GAAG,EAAC,EAAE;EAACC,GAAG,EAAC,cAAc;EAACC,EAAE,EAAC;;gEACpCC,mBAAA,CAAoC;EAA5BD,EAAE,EAAC;AAAe;;EAI7BJ,KAAK,EAAC;AAAY;;;uBAb1BM,mBAAA,CAsBM,OAtBNC,UAsBM,GApBHF,mBAAA,CAUM,OAVNG,UAUM,GATFH,mBAAA,CAGM,cAFFA,mBAAA,CAA8C,SAA9CI,UAA8C,+BAC9CC,UAA6B,C,GAEjCL,mBAAA,CAGM,cAFFA,mBAAA,CAA2D,SAA3DM,UAA2D,+BAC3DC,UAAoC,C,KAI5CP,mBAAA,CAOM,OAPNQ,UAOM,GANFC,YAAA,CAAgEC,oBAAA;IAArDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,SAAS;;IAfnDC,OAAA,EAAAC,QAAA,CAeuD,MAAK,CAf5DC,gBAAA,CAeuD,OAAK,E;IAf5DC,CAAA;MAgBQX,YAAA,CAAiEC,oBAAA;IAAtDC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAM,WAAW;;IAhBpDJ,OAAA,EAAAC,QAAA,CAgBwD,MAAK,CAhB7DC,gBAAA,CAgBwD,OAAK,E;IAhB7DC,CAAA;MAiBQX,YAAA,CAAkEC,oBAAA;IAAvDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAO,YAAY;;IAjBtDL,OAAA,EAAAC,QAAA,CAiB0D,MAAI,CAjB9DC,gBAAA,CAiB0D,MAAI,E;IAjB9DC,CAAA;MAkBQX,YAAA,CAAmEC,oBAAA;IAAxDC,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAQ,cAAc;;IAlBvDN,OAAA,EAAAC,QAAA,CAkB2D,MAAI,CAlB/DC,gBAAA,CAkB2D,MAAI,E;IAlB/DC,CAAA;MAmBQX,YAAA,CAAgEC,oBAAA;IAArDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAE,cAAY;;IAnBtDI,OAAA,EAAAC,QAAA,CAmBwD,MAAI,CAnB5DC,gBAAA,CAmBwD,MAAI,E;IAnB5DC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}