{"ast":null,"code":"import { ref, onMounted, onBeforeUnmount } from 'vue';\nexport default {\n  __name: 'onlineAlaysis',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const video = ref();\n    const mediaStreamTrack = ref({});\n    const canvas = ref();\n    const ctx = ref();\n    const socket = new WebSocket('ws://localhost:8888');\n    let flag = 1;\n    let worker;\n    onMounted(() => {\n      console.log('正在打开摄像头。。。');\n      getCamera();\n      //连接后端socket\n      connection();\n      reconnection();\n      document.getElementById('start_detection').addEventListener('click', sendStream());\n    });\n    function connection() {\n      socket.onopen = () => {\n        console.log('socket 已打开...');\n      };\n    }\n    async function reconnection() {\n      console.log('Attempting to reconnect...');\n      setTimeout(connection(), 3000); // 3秒后尝试重新连接\n    }\n    function getCamera() {\n      canvas.value = document.getElementById('camera');\n      ctx.value = canvas.value.getContext('2d');\n      if (navigator.mediaDevices) {\n        navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: false\n        }).then(stream => {\n          video.value.srcObject = stream;\n          video.value.play();\n          mediaStreamTrack.value = stream.getTracks()[0];\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        //防止浏览器版本旧不支持mediaDevices\n        navigator.mediaDevices = {};\n      }\n    }\n    onBeforeUnmount(() => {\n      closeCamera();\n    });\n    function closeCamera() {\n      let stream = video.value.srcObject;\n      if (!stream) return;\n      let tracks = stream.getTracks();\n      tracks.forEach(x => {\n        x.stop();\n      });\n    }\n    function getDetection() {\n      flag = 1;\n      console.log(\"bbbbb\");\n      if (typeof Worker !== 'undefined') {\n        if (typeof worker == 'undefined') {\n          worker = new Worker('sendStream.js');\n        }\n        worker.postMessage({\n          command: 'start',\n          payload: {\n            video: video,\n            canvas: document.getElementById(\"canvas\"),\n            flag: flag,\n            socket: socket\n          }\n        });\n      }\n    }\n    function closeDetection() {\n      flag = 0;\n      console.log(flag);\n      worker.terminate();\n    }\n    const __returned__ = {\n      video,\n      mediaStreamTrack,\n      canvas,\n      ctx,\n      socket,\n      get flag() {\n        return flag;\n      },\n      set flag(v) {\n        flag = v;\n      },\n      get worker() {\n        return worker;\n      },\n      set worker(v) {\n        worker = v;\n      },\n      connection,\n      reconnection,\n      getCamera,\n      closeCamera,\n      getDetection,\n      closeDetection,\n      ref,\n      onMounted,\n      onBeforeUnmount\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","video","mediaStreamTrack","canvas","ctx","socket","WebSocket","flag","worker","console","log","getCamera","connection","reconnection","document","getElementById","addEventListener","sendStream","onopen","setTimeout","value","getContext","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","getTracks","catch","err","closeCamera","tracks","forEach","x","stop","getDetection","Worker","postMessage","command","payload","closeDetection","terminate"],"sources":["C:/Users/31136/Desktop/face_anti_front/src/components/onlineAlaysis.vue"],"sourcesContent":["<template>\r\n <div class=\"container\">\r\n    <video src=\"\" ref=\"video\" id=\"video\"></video>\r\n    <canvas id=\"camera\"></canvas>\r\n    <div class=\"botton_box\">\r\n        <el-button type=\"primary\" @click=\"getCamera()\">打开摄像头</el-button>\r\n        <el-button type=\"danger\" @click=\"closeCamera()\">关闭摄像头</el-button>\r\n        <el-button type=\"primary\" @click=\"getDetection()\">开始检测</el-button>\r\n        <el-button type=\"danger\" @click=\"closeDetection()\">关闭检测</el-button>\r\n        <el-button type=\"primary\" @click=\"function(){}\">保存截图</el-button>\r\n        \r\n    </div>\r\n    \r\n </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref,onMounted,onBeforeUnmount,} from 'vue';\r\nconst video = ref()\r\nconst mediaStreamTrack = ref({})\r\nconst canvas = ref()\r\nconst ctx = ref()\r\nconst socket = new WebSocket('ws://localhost:8888');\r\nlet flag = 1;\r\nlet worker;\r\nonMounted(()=>{\r\n    console.log('正在打开摄像头。。。')\r\n    getCamera();\r\n    //连接后端socket\r\n    connection()\r\n    reconnection()\r\n    document.getElementById('start_detection').addEventListener('click',sendStream())\r\n\r\n})\r\nfunction connection(){\r\n    socket.onopen = ()=>{\r\n        console.log('socket 已打开...')\r\n    }\r\n}\r\nasync function reconnection(){\r\n    console.log('Attempting to reconnect...');\r\n    setTimeout(connection(), 3000); // 3秒后尝试重新连接\r\n}\r\nfunction getCamera(){\r\n    canvas.value = document.getElementById('camera');\r\n    ctx.value = canvas.value.getContext('2d');\r\n    if(navigator.mediaDevices){\r\n        navigator.mediaDevices.getUserMedia({video:true,audio:false}).then((stream)=>{\r\n            video.value.srcObject = stream;\r\n            video.value.play();\r\n            mediaStreamTrack.value = stream.getTracks()[0];\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    }else{\r\n        //防止浏览器版本旧不支持mediaDevices\r\n        navigator.mediaDevices={}\r\n    }\r\n}\r\nonBeforeUnmount(()=>{\r\n    closeCamera();\r\n})\r\nfunction closeCamera(){\r\n    let stream = video.value.srcObject;\r\n    if (!stream) return;\r\n    let tracks = stream.getTracks();\r\n    tracks.forEach((x) => {\r\n    x.stop();\r\n    });\r\n}\r\nfunction getDetection(){\r\n    flag = 1;  \r\n    console.log(\"bbbbb\")\r\n    if(typeof(Worker) !== 'undefined'){\r\n        if(typeof(worker) == 'undefined'){\r\n            worker = new Worker('sendStream.js');\r\n        }\r\n        worker.postMessage({\r\n            command: 'start',\r\n            payload: {\r\n                video: video,\r\n                canvas: document.getElementById(\"canvas\"),\r\n                flag: flag,\r\n                socket:socket\r\n            }});\r\n    }\r\n}\r\n\r\nfunction closeDetection(){\r\n    flag = 0;\r\n    console.log(flag)\r\n    worker.terminate();\r\n}\r\n\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.container{\r\n    display: flex;\r\n    width: 84vw;\r\n    max-height: 90vh;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #f0f0f0;\r\n    padding-top: 1%;\r\n    padding-bottom: 3%;\r\n}\r\n#camera{\r\n    width:0;\r\n    height:0;\r\n    display: none;\r\n}\r\n#video{\r\n    width:60vw;\r\n}\r\n.botton_box{\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}